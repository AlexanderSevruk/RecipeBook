{"version":3,"sources":["reducers/recipeReducer.js","contexts/RecipeContext.js","components/AddRecipeButton.js","components/RecipeForm.js","components/BottomNav.js","components/Navbar.js","components/SearchAPI/RecipeOutput.js","components/SearchAPI/RecipeFetch.js","components/RecipeDetails.js","components/RecipeList.js","components/Routing.js","App.js","serviceWorker.js","index.js"],"names":["recipeReducer","state","action","type","title","recipe","ingredient","direction","id","uuid","filter","RecipeContext","createContext","RecipeContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","recipes","dispatch","useEffect","setItem","stringify","Provider","value","children","useStyles","makeStyles","theme","button","margin","spacing","IconLabelButtons","classes","Button","variant","color","className","startIcon","NewRecipeForm","useContext","useState","setTitle","setIngredient","setDirection","onSubmit","e","preventDefault","TextField","style","fullWidth","label","onChange","target","required","multiline","BottomNav","Grid","ButtonGroup","size","aria-label","Link","href","underline","Navbar","length","Recipe","calories","image","ingredients","url","map","text","rel","src","alt","Search","setRecipes","search","setSearch","query","setQuery","getRecipes","a","fetch","response","json","data","hits","InputBase","placeholder","inputProps","IconButton","onClick","RecipeOutput","key","Math","floor","RecipeDetails","RecipeList","Routing","exact","path","component","RecipeForm","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cba88a1f.chunk.js","sourcesContent":["import uuid from \"uuid/v1\";\r\n\r\nexport const recipeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_RECIPE\":\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.recipe.title,\r\n          ingredient: action.recipe.ingredient,\r\n          direction: action.recipe.direction,\r\n          id: uuid()\r\n        }\r\n      ];\r\n    case \"REMOVE_RECIPE\":\r\n      return state.filter(recipe => recipe.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { recipeReducer } from \"../reducers/recipeReducer\";\r\n\r\nexport const RecipeContext = createContext();\r\n\r\nconst RecipeContextProvider = props => {\r\n  const [recipes, dispatch] = useReducer(recipeReducer, [], () => {\r\n    const localData = localStorage.getItem(\"recipes\");\r\n    return localData ? JSON.parse(localData) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"recipes\", JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  return (\r\n    <RecipeContext.Provider value={{ recipes, dispatch }}>\r\n      {props.children}\r\n    </RecipeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipeContextProvider;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default function IconLabelButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        startIcon={<AddCircleIcon />}\r\n      >\r\n        Add recipe\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport IconLabelButtons from \"./AddRecipeButton\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst NewRecipeForm = () => {\r\n  const { dispatch } = useContext(RecipeContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [ingredient, setIngredient] = useState(\"\");\r\n  const [direction, setDirection] = useState(\"\");\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"ADD_RECIPE\", recipe: { title, ingredient, direction } });\r\n    setTitle(\"\");\r\n    setIngredient(\"\");\r\n    setDirection(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        style={{ margin: \"12px 0\" }}\r\n        id=\"standard-basic\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        label=\"Recipe title\"\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <TextField\r\n        style={{ margin: \"12px 0\" }}\r\n        id=\"standard-basic\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        multiline\r\n        label=\"Ingredients\"\r\n        value={ingredient}\r\n        onChange={e => setIngredient(e.target.value)}\r\n        required\r\n      />\r\n      <TextField\r\n        style={{ margin: \"12px 0\" }}\r\n        label=\"Directions(optional)\"\r\n        id=\"standard-multiline-flexible\"\r\n        multiline\r\n        fullWidth\r\n        value={direction}\r\n        onChange={e => setDirection(e.target.value)}\r\n      />\r\n\r\n      <IconLabelButtons>Add</IconLabelButtons>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewRecipeForm;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { Link } from \"@material-ui/core\";\r\n\r\nexport default function BottomNav() {\r\n  return (\r\n    <Grid className=\"button__group\">\r\n      <ButtonGroup size=\"large\" aria-label=\"large contained button group\">\r\n        <Link href=\"#\" underline=\"none\">\r\n          <Button color=\"primary\"> create </Button>\r\n        </Link>\r\n        <Link href=\"#/search\" underline=\"none\">\r\n          <Button color=\"primary\">search</Button>\r\n        </Link>\r\n        <Link href=\"#/archive\" underline=\"none\">\r\n          <Button color=\"primary\">archive</Button>\r\n        </Link>\r\n      </ButtonGroup>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport NewRecipeForm from \"./RecipeForm\";\r\nimport GroupedButtons from \"./BottomNav\";\r\n\r\nconst Navbar = () => {\r\n  const { recipes } = useContext(RecipeContext);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>Recipe Book</h1>\r\n      <GroupedButtons />\r\n      <p>\r\n        You can find your saved recipes in the Archive. Currently you have{\" \"}\r\n        {recipes.length}{\" \"}\r\n        {recipes.length >= 2 || recipes.length === 0 ? \"recipes\" : \"recipe\"}{\" \"}\r\n        saved\r\n      </p>\r\n      <NewRecipeForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Recipe = ({ title, calories, image, ingredients, url }) => {\r\n  return (\r\n    <div className=\"recipes\">\r\n      <h2>{title}</h2>\r\n\r\n      <ul>\r\n        {ingredients.map(ingredient => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <p>calories : {calories}</p>\r\n      <p>\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          View full recipe\r\n        </a>\r\n      </p>\r\n      <img src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BottomNav from \"../BottomNav\";\r\nimport RecipeOutput from \"./RecipeOutput\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\n  const APP_ID = \"6bb717cb\";\r\n  const APP_KEY = \"83f22d27bb00b6d3afebeeca94d8da7a\";\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"banana\");\r\n\r\n  useEffect(() => {\r\n    getRecipes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(\r\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n  };\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-page\">\r\n      <div className=\"BottomNav\">\r\n        <BottomNav />\r\n      </div>\r\n      <div className=\"search\">\r\n        <InputBase\r\n          className=\"input\"\r\n          placeholder=\"Search field\"\r\n          inputProps={{ \"aria-label\": \"search google maps\" }}\r\n          value={search}\r\n          onChange={updateSearch}\r\n        />\r\n        <IconButton type=\"submit\" aria-label=\"search\">\r\n          <SearchIcon onClick={getSearch} />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <div className=\"recipe_output\">\r\n            <RecipeOutput\r\n              key={recipe.recipe.label}\r\n              title={recipe.recipe.label}\r\n              calories={Math.floor(recipe.recipe.calories)}\r\n              image={recipe.recipe.image}\r\n              ingredients={recipe.recipe.ingredients}\r\n              url={recipe.recipe.url}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst RecipeDetails = ({ recipe }) => {\r\n  const { dispatch } = useContext(RecipeContext);\r\n  return (\r\n    <li className=\"output\">\r\n      <div className=\"title\">{recipe.title}</div>\r\n      <br />\r\n      <div className=\"ingredient\">\r\n        Ingredients: <br /> {recipe.ingredient}\r\n      </div>\r\n      <br />\r\n      <div className=\"direction\">\r\n        Direction: <br /> {recipe.direction}\r\n      </div>\r\n      <br />\r\n      <div className=\"delete-button\">\r\n        <Button\r\n          onClick={() => dispatch({ type: \"REMOVE_RECIPE\", id: recipe.id })}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React, { useContext } from \"react\";\r\nimport { RecipeContext } from \"../contexts/RecipeContext\";\r\nimport RecipeDetails from \"./RecipeDetails\";\r\nimport BottomNav from \"./BottomNav\";\r\n\r\nconst RecipeList = () => {\r\n  const { recipes } = useContext(RecipeContext);\r\n  return recipes.length ? (\r\n    <div className=\"recipe-list\">\r\n      <ul>\r\n        {recipes.map(recipe => {\r\n          return <RecipeDetails recipe={recipe} key={recipe.id} />;\r\n        })}\r\n      </ul>\r\n      <div className=\"BottomNav\">\r\n        <BottomNav />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">\r\n      No saved recipes\r\n      <BottomNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","import React from \"react\";\r\nimport Search from \"./SearchAPI/RecipeFetch\";\r\nimport Navbar from \"./Navbar\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport RecipeForm from \"./RecipeForm\";\r\n\r\nconst Routing = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Navbar} />\r\n      <Route exact path=\"/create\" component={RecipeForm} />\r\n      <Route exact path=\"/search\" component={Search} />\r\n      <Route exact path=\"/archive\" component={RecipeList} />\r\n    </Switch>\r\n  </Router>\r\n);\r\nexport default Routing;\r\n","import React from \"react\";\r\nimport RecipeContextProvider from \"./contexts/RecipeContext\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Routing from \"./components/Routing\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <RecipeContextProvider>\r\n        <Routing>\r\n          <Navbar />\r\n        </Routing>\r\n      </RecipeContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}